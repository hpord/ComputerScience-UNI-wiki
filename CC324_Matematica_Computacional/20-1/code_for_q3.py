# -*- coding: utf-8 -*-
"""test2_cc3m2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1C9QYgX3v4t2TC4eVTMDzSUbNdfnmgZcP
"""


# Item a

import numpy as np

def pivotear(tabla, xn, xb, i_entra, i_sale):
    # tabla     : tabla a pivotear
    # xn        : listado del orden de las variables no básicas
    # xb        : listado del orden de las variables básicas
    # i_entra   : índice de la variable que va a entrar a la base
    # i_sale    : índice de la variable que va a salir de la base
    print("x_b\t: ", xb+1)
    print("x_n\t: ", xn+1)
    print("x_entra\t: ", xn[i_entra]+1)
    print("x_sale\t: ", xb[i_sale]+1)
    print(f"------------------ pivotear(x_{xb[i_sale]+1},x_{xn[i_entra]+1}) --------------------")
    N_sale_entra =  tabla[i_sale +1, i_entra+1]
    tabla[i_sale +1, i_entra+1] = -1
    tabla[i_sale+1] =  tabla[i_sale+1] * (-1/N_sale_entra)
    for i in range (len(tabla)):
        if i != i_sale + 1:
            coef = tabla[i,i_entra+1]
            tabla[i,i_entra+1] = 0
            tabla[i] += tabla[i_sale+1]*coef
    tmp  = xb[i_sale]
    xb[i_sale] = xn[i_entra]
    xn[i_entra] = tmp
    print("------------------ Fin de pivotar ---------------------")
    print("-------------------     Tabla      ---------------------")
    print(tabla)
    print("-------------------   Fin Tabla    ---------------------")
    return tabla



# Item b

def iterar(tabla ,xn ,xb):
    # xn        : listado del orden de las variables no básicas
    # xb        : listado del orden de las variables básicas
    i_entra = None
    i_sale = None   
    while c_es_negativo(tabla):
        i_entra = np.argmin(tabla[0, 1:])
        i_sale = minimo_cociente_negativo(tabla, i_entra)
        pivotar(tabla, xn, xb, i_entra, i_sale)
    print("-------- c_tilde ahora es positivo (>=0) ------------")
    print("x_b\t: ", xb+1)
    print("x_n\t: ", xn+1)
    pass

def minimo_cociente_negativo(tabla, i_entra ):
    mascara = tabla[1:,i_entra+1] <0 
    N_entra = tabla[1:,i_entra+1]
    b_entra = tabla[1:,0]
    min_arg = float('inf')
    i_sale = None 
    for i in range (len(N_entra)):
        if N_entra[i] < 0:
            cociente = -b_entra[i]/N_entra[i]
            if cociente < min_arg:
                i_sale = i
                min_arg = cociente
    if i_sale is None:
        print ("\n¡No hay N's negativos para hallar el mínimo!\n")
    return i_sale

def c_es_negativo(tabla):
    print("c_tilda\t: ", tabla[0,1:])
    for ci in tabla[0,1:]:
        if ci < 0:
            return True
    return False



# Item c

if __name__ == "__main__":
    tabla = [
        [4.30, -0.2, 6],
        [1.05, -1.2, 1],
        [0.05, -0.2, 1],
    ]
    tabla = np.array(tabla)
    xn = np.array([0,2])
    xb = np.array([1,3])
    iterar(tabla , xn , xb)     
    pass
